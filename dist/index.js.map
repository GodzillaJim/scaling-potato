{"version":3,"file":"index.js","mappings":"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","sources":["webpack://collaborator/./src/config/config.ts","webpack://collaborator/./src/config/index.ts","webpack://collaborator/./src/config/logger.config.ts","webpack://collaborator/./src/config/mongodb.config.ts","webpack://collaborator/./src/controllers/auth/index.ts","webpack://collaborator/./src/controllers/contact/index.ts","webpack://collaborator/./src/controllers/task/TaskController/index.ts","webpack://collaborator/./src/controllers/user/index.ts","webpack://collaborator/./src/errors/index.ts","webpack://collaborator/./src/index.ts","webpack://collaborator/./src/middleware/auth/index.ts","webpack://collaborator/./src/middleware/limiters.ts","webpack://collaborator/./src/models/index.ts","webpack://collaborator/./src/models/roles/index.ts","webpack://collaborator/./src/models/task/index.ts","webpack://collaborator/./src/models/users/index.ts","webpack://collaborator/./src/routes/auth/index.ts","webpack://collaborator/./src/routes/guest/index.ts","webpack://collaborator/./src/routes/index.ts","webpack://collaborator/./src/routes/task/index.ts","webpack://collaborator/./src/routes/user/index.ts","webpack://collaborator/./src/seed/index.ts","webpack://collaborator/./src/server.ts","webpack://collaborator/./src/services/UserService/index.ts","webpack://collaborator/./src/services/auth/accounts/index.ts","webpack://collaborator/./src/services/auth/tools/index.ts","webpack://collaborator/./src/services/contact/index.ts","webpack://collaborator/./src/services/kafka/index.ts","webpack://collaborator/./src/services/socket/server/index.ts","webpack://collaborator/./src/services/socket/server/services/User/index.ts","webpack://collaborator/./src/services/task/index.ts","webpack://collaborator/./src/tools/kafka/index.ts","webpack://collaborator/./src/tools/validators/index.ts","webpack://collaborator/./src/types/dto/contact/ContactForm.ts","webpack://collaborator/./src/types/dto/login/index.ts","webpack://collaborator/./src/types/dto/registration/index.ts","webpack://collaborator/./src/types/dto/task/create/index.ts","webpack://collaborator/./src/types/dto/task/findOne/index.ts","webpack://collaborator/./src/types/index.ts","webpack://collaborator/external commonjs \"@faker-js/faker\"","webpack://collaborator/external commonjs \"autobind-decorator\"","webpack://collaborator/external commonjs \"class-transformer\"","webpack://collaborator/external commonjs \"class-validator\"","webpack://collaborator/external commonjs \"cors\"","webpack://collaborator/external commonjs \"dotenv\"","webpack://collaborator/external commonjs \"express\"","webpack://collaborator/external commonjs \"express-rate-limit\"","webpack://collaborator/external commonjs \"helmet\"","webpack://collaborator/external commonjs \"http-errors\"","webpack://collaborator/external commonjs \"jsonwebtoken\"","webpack://collaborator/external commonjs \"kafkajs\"","webpack://collaborator/external commonjs \"lodash\"","webpack://collaborator/external commonjs \"mongoose\"","webpack://collaborator/external commonjs \"morgan\"","webpack://collaborator/external commonjs \"socket.io\"","webpack://collaborator/external commonjs \"winston\"","webpack://collaborator/external node-commonjs \"crypto\"","webpack://collaborator/external node-commonjs \"http\"","webpack://collaborator/external node-commonjs \"http2\"","webpack://collaborator/webpack/bootstrap","webpack://collaborator/webpack/before-startup","webpack://collaborator/webpack/startup","webpack://collaborator/webpack/after-startup"],"sourcesContent":["import { CorsOptions } from \"cors\";\nimport { Request, Response } from \"express\";\nimport logger from \"./logger.config\";\n\n/* Cors Config  */\nconst corsOptions: CorsOptions = {\n  allowedHeaders: [\n    \"Origin\",\n    \"X-Requested-With\",\n    \"Content-Type\",\n    \"Accept\",\n    \"X-Access-Token\",\n    \"Authorization\",\n  ],\n  credentials: true,\n  methods: \"GET,HEAD,OPTIONS,PUT,PATCH,POST,DELETE\",\n  preflightContinue: false,\n};\n/**\n * Function provides CORS filtering\n * @param {Request} request since it is a middleware\n * @param {Function} callback to handle error in case of blacklisted domains\n */\nexport const corsOptionsWhiteList = (request: Request, callback: Function) => {\n  const whiteList = [\n    \"localhost:4200\",\n    \"localhost:3000\",\n    \"localhost:5000\",\n    \"collaborator-app-dev-dev.us-west-2.elasticbeanstalk.com\",\n  ];\n  const origin = request.header(\"origin\")\n    ? request.header(\"origin\")\n    : request.header(\"host\");\n  if (origin && whiteList.some((host: string) => origin.includes(host))) {\n    corsOptions.origin = true;\n    callback(null, corsOptions);\n    return;\n  }\n  corsOptions.origin = false;\n  callback(new Error(`Origin not allowed by CORS: ${origin}`), corsOptions);\n};\n/**\n * Function provides set up for morgan request logging\n * @param tokens\n * @param {Request} req\n * @param {Response} res\n */\nexport const morganConfig = (tokens: any, req: Request, res: Response) => {\n  const log = [\n    tokens.method(req, res),\n    tokens.url(req, res),\n    \"-\",\n    \"statusCode:\",\n    tokens.status(req, res),\n    \"-\",\n    \"response-size:\",\n    tokens.res(req, res, \"content-length\"),\n    \"-\",\n    \"response-time:\",\n    tokens[\"response-time\"](req, res),\n    \"ms\",\n  ].join(\" \");\n  logger.info(log);\n  return log;\n};\n","import dotenv from \"dotenv\";\n\ndotenv.config();\n\nexport default {\n  mailer: {\n    host: process.env.MAIL_HOST,\n    port: parseInt(process.env.MAIL_PORT, 10),\n    auth: {\n      user: process.env.MAIL_USERNAME,\n      pass: process.env.MAIL_PASSWORD,\n    },\n  },\n  kafka: {\n    bootstrapServerHost: process.env.KAFKA_BOOTSTRAP_SERVER || \"localhost:9092\",\n    port: process.env.KAFKA_PORT || 9092,\n    clientId: process.env.KAFKA_CLIENT_ID,\n  },\n  jwt: {\n    secret: process.env.JWT_SECRET || \"SECRET\",\n    expiration: process.env.JWT_EXPIRATION || 3000,\n  },\n};\n","import { createLogger, format, transports } from \"winston\";\n\nconst logger = createLogger({\n  level: \"info\",\n  format: format.combine(\n    format.simple(),\n    format.timestamp(),\n    format.printf((info: any) => {\n      // eslint-disable-next-line no-console\n      return `[${info.timestamp}] ${info.level}: ${info.message}`;\n    })\n  ),\n  defaultMeta: { service: \"user-service\" },\n  transports: [\n    new transports.File({\n      filename: \"./logs/error.log\",\n      level: \"error\",\n    }),\n    new transports.File({\n      filename: \"./logs/info.log\",\n      level: \"info\",\n    }),\n  ],\n});\n\nexport default logger;\n","import { config } from \"dotenv\";\nimport mongoose from \"mongoose\";\nimport logger from \"./logger.config\";\n\nexport default class MongoDb {\n  constructor() {\n    config();\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  connect() {\n    mongoose\n      .connect(process.env.MONGO_URI)\n      .then(() => {\n        logger.info(\"MongoDb connected\");\n      })\n      .catch((error) => {\n        logger.error(error);\n      });\n  }\n}\n","import { NextFunction, Request, Response } from \"express\";\n\nimport { boundClass } from \"autobind-decorator\";\nimport NewAccount from \"../../types/dto/registration\";\nimport Account from \"../../services/auth/accounts\";\nimport Login from \"../../types/dto/login\";\n\n@boundClass\nexport default class AuthController {\n  accountService: Account;\n\n  constructor() {\n    this.accountService = new Account();\n  }\n\n  public async registerNewUser(\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const newUser: NewAccount = req.body;\n      await this.accountService.registerNewAccount(newUser);\n      res.status(200).json({ success: true, data: \"Check email to continue\" });\n    } catch (e) {\n      next(e);\n    }\n  }\n\n  public async loginUser(req: Request, res: Response, next: NextFunction) {\n    try {\n      const user: Login = req.body;\n      const tokenInfo = await this.accountService.loginUser(user);\n      res.status(200).json(tokenInfo);\n    } catch (e) {\n      next(e);\n    }\n  }\n}\n","import { boundClass } from \"autobind-decorator\";\nimport { NextFunction, Request, Response } from \"express\";\nimport logger from \"../../config/logger.config\";\nimport ContactFormService from \"../../services/contact\";\n\n@boundClass\nexport default class ContactFormController {\n  name: string;\n\n  contactService: ContactFormService;\n\n  constructor() {\n    this.name = \"Contact-Form-Controller\";\n    this.contactService = new ContactFormService();\n  }\n\n  public async sendContactFormSubmission(\n    req: Request,\n    _res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const form = req.body;\n      await this.contactService.submitContactForm(form);\n      logger.info(form);\n    } catch (e) {\n      logger.error(e);\n      next(e);\n    }\n  }\n}\n","import { Request, Response } from \"express\";\nimport TaskService from \"../../../services/task\";\nimport TaskDTO from \"../../../types/dto/task/create\";\nimport createErrorResponse from \"../../../errors\";\nimport TaskID from \"../../../types/dto/task/findOne\";\n\nexport default class ClassController {\n  public static async createTask(req: Request, res: Response) {\n    try {\n      const userEmail = res.locals.user.email;\n      const task = req.body as unknown as TaskDTO;\n      const response = {\n        status: 200,\n        data: await TaskService.createTask(task, userEmail),\n      };\n      return res.json(response);\n    } catch (e) {\n      return res.status(500).json(createErrorResponse(e));\n    }\n  }\n\n  public static async getTaskById(req: Request, res: Response) {\n    try {\n      const id = req.body as unknown as TaskID;\n      const task = await TaskService.getTaskById(id);\n      if (!task) {\n        res\n          .status(404)\n          .json(\n            createErrorResponse(\n              { message: `Task with id: ${id.id} does not exist` },\n              404\n            )\n          );\n      }\n      res.json({ status: 200, data: task });\n    } catch (e) {\n      res.status(500).json(createErrorResponse(e));\n    }\n  }\n}\n","import { Request, Response } from \"express\";\nimport UserService from \"../../services/UserService\";\nimport createErrorResponse from \"../../errors\";\n\nexport default class UserController {\n  public static async getUsers(_req: Request, res: Response) {\n    try {\n      const users = await UserService.getAllUsers();\n      return res.json(users);\n    } catch (e) {\n      return res.json(createErrorResponse(e));\n    }\n  }\n}\n","import createHttpError from \"http-errors\";\n\nconst createErrorResponse = (error: any, status: number = 500) => {\n  switch (status) {\n    case 404:\n      return new createHttpError.NotFound(error.message);\n    case 400:\n      return new createHttpError.BadRequest(error.message);\n    case 401:\n      return new createHttpError.Unauthorized(error.message);\n    case 403:\n      return new createHttpError.Forbidden(error.message);\n    default:\n      return {\n        error: {\n          statusCode: status,\n          message: error.message,\n        },\n      };\n  }\n};\nexport default createErrorResponse;\n","import { config } from \"dotenv\";\nimport MongoDb from \"./config/mongodb.config\";\nimport server from \"./server\";\nimport { seedAdmin, seedRoles } from \"./seed\";\nimport logger from \"./config/logger.config\";\n\nconfig();\nconst port = process.env.PORT || 3000;\nconst mongodb = new MongoDb();\nmongodb.connect();\n\nserver.listen(port, async () => {\n  logger.info(`connected to port ${port}`);\n  console.log(`connected to port ${port}`);\n  await seedRoles();\n  await seedAdmin();\n});\n","import { NextFunction, Response, Request } from \"express\";\nimport { isEmpty } from \"lodash\";\nimport { constants } from \"http2\";\nimport AuthService from \"../../services/auth/tools\";\nimport { Role } from \"../../types\";\nimport logger from \"../../config/logger.config\";\nimport createErrorResponse from \"../../errors\";\n\nconst { HTTP_STATUS_UNAUTHORIZED } = constants;\n\nexport default class AuthChecker {\n  authService: AuthService;\n\n  constructor() {\n    this.authService = new AuthService();\n  }\n\n  public static async isAuthenticated(\n    req: Request,\n    res: Response,\n    next: NextFunction\n  ) {\n    try {\n      const token = req.header(\"Authorization\");\n      if (token || !isEmpty(token)) {\n        const decoded: any = AuthService.verifyToken(token.split(\" \")[1]);\n        if (decoded) {\n          const { email, firstName, roles } = decoded.payload;\n          res.locals = { user: { email, firstName, roles } };\n          return next();\n        }\n      }\n      return res\n        .status(HTTP_STATUS_UNAUTHORIZED)\n        .json(\n          createErrorResponse(\n            { message: \"Please provide a valid token on header\" },\n            HTTP_STATUS_UNAUTHORIZED\n          )\n        );\n    } catch (e) {\n      return res.status(500).json(createErrorResponse(e));\n    }\n  }\n\n  public static checkAuthorization = (role: Role, roles: string[]) => {\n    try {\n      const isAuthorization = roles.find((permission) => {\n        console.log(\"Comparison: \", permission, role.toString());\n        return `${permission}` === role.toString();\n      });\n      if (isAuthorization) {\n        return true;\n      }\n    } catch (e) {\n      logger.error(e);\n    }\n    return false;\n  };\n\n  public static isAuthorized =\n    (role: Role) => (_req: Request, res: Response, next: NextFunction) => {\n      try {\n        const { user } = res.locals;\n        const { roles } = user;\n\n        const isAuthorized = AuthChecker.checkAuthorization(role, roles);\n        if (isAuthorized) {\n          return next();\n        }\n        return res\n          .status(403)\n          .json(createErrorResponse({ message: \"Unauthorized\" }, 403));\n      } catch (e: any) {\n        logger.error(e);\n        return res.status(500).json(createErrorResponse(e, 500));\n      }\n    };\n}\n","import rateLimit from \"express-rate-limit\";\n\nexport const mainLimiter = rateLimit({\n  windowMs: 10 * 60 * 1000,\n  max: 100,\n  message: {\n    status: 429,\n    message: \"Too Many Requests\",\n  },\n});\nexport default mainLimiter;\n","import RoleModel from \"./roles\";\nimport UserModel from \"./users\";\n\nexport const User = UserModel;\nexport const Role = RoleModel;\n","import mongoose from \"mongoose\";\nimport { Role } from \"../../types\";\n\nexport const RoleSchema = new mongoose.Schema(\n  {\n    name: {\n      type: String,\n      enum: Role,\n      default: Role.END_USER,\n    },\n    createdBy: String,\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.model(\"Role\", RoleSchema);\n","import { model, Schema } from \"mongoose\";\n\nconst str = `function(){\n  //Write code here\n}`;\nconst TaskSchema = new Schema(\n  {\n    name: {\n      type: String,\n      required: true,\n    },\n    owner: { type: String, required: true },\n    code: { type: String, required: false, default: str },\n  },\n  { timestamps: true }\n);\n\nexport default model(\"Task\", TaskSchema);\n","import { Schema, model } from \"mongoose\";\r\n\r\nconst UserSchema = new Schema({\r\n  email: {\r\n    type: String,\r\n    unique: true,\r\n    required: true,\r\n  },\r\n  firstName: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  lastName: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true,\r\n  },\r\n  disabled: {\r\n    type: Boolean,\r\n    default: true,\r\n  },\r\n  verified: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  emailVerifiedAt: {\r\n    type: Date,\r\n    default: undefined,\r\n  },\r\n  emailVerificationCode: String,\r\n  avatar: {\r\n    type: String,\r\n    default: \"https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/986.jpg\",\r\n  },\r\n  salt: String,\r\n  roles: {\r\n    type: Array,\r\n    default: [],\r\n  },\r\n});\r\n\r\nexport default model(\"User\", UserSchema);\r\n","import express, { Router } from \"express\";\n\nimport mainLimiter from \"../../middleware/limiters\";\nimport AuthController from \"../../controllers/auth\";\nimport validators from \"../../tools/validators\";\nimport NewAccount from \"../../types/dto/registration\";\nimport Login from \"../../types/dto/login\";\n\nconst router: Router = express.Router();\n\nconst authController = new AuthController();\nrouter\n  .route(\"/register\")\n  .post([\n    mainLimiter,\n    validators.validateInput(NewAccount),\n    authController.registerNewUser,\n  ]);\nrouter\n  .route(\"/login\")\n  .post([\n    mainLimiter,\n    validators.validateInput(Login),\n    authController.loginUser,\n  ]);\n\nexport default router;\n","import { Router, Request, Response } from \"express\";\nimport Validators from \"../../tools/validators\";\nimport ContactForm from \"../../types/dto/contact/ContactForm\";\nimport ContactFormController from \"../../controllers/contact\";\n\nconst router = Router();\nconst controller = new ContactFormController();\n\nconst handler = (req: Request, res: Response) => {\n  res.json({\n    status: \"Route is live\",\n    url: req.url,\n  });\n};\nrouter\n  .route(\"/contact\")\n  .get(handler)\n  .post([\n    Validators.validateInput(ContactForm),\n    controller.sendContactFormSubmission,\n  ]);\n\nexport default router;\n","import { Router, Response, Request } from \"express\";\nimport authRoute from \"./auth\";\nimport userRoute from \"./user\";\nimport guestRoute from \"./guest\";\nimport taskRouter from \"./task\";\n\nconst router = Router();\n\nrouter.use(\"/auth\", authRoute);\nrouter.use(\"/user\", userRoute);\nrouter.use(\"/guest\", guestRoute);\nrouter.use(\"/task\", taskRouter);\n\n/**\n * Handler root access, health check only\n * @param _req\n * @param res\n */\nconst handler = (_req: Request, res: Response) => {\n  res.json({ health: \"Okay\", message: \"Hello world\" });\n};\nrouter.get(\"/\", handler);\n\nexport default router;\n","import express, { Router } from \"express\";\r\nimport mainLimiter from \"../../middleware/limiters\";\r\nimport AuthChecker from \"../../middleware/auth\";\r\nimport { Role } from \"../../types\";\r\nimport TaskController from \"../../controllers/task/TaskController\";\r\nimport validators from \"../../tools/validators\";\r\nimport TaskDTO from \"../../types/dto/task/create\";\r\nimport TaskID from \"../../types/dto/task/findOne\";\r\n\r\nconst router: Router = express.Router();\r\n\r\nrouter\r\n  .route(\"/\")\r\n  .post([\r\n    mainLimiter,\r\n    AuthChecker.isAuthenticated,\r\n    AuthChecker.isAuthorized(Role.END_USER),\r\n    validators.validateInput(TaskDTO),\r\n    TaskController.createTask,\r\n  ]);\r\nrouter\r\n  .route(\"/id\")\r\n  .post([\r\n    mainLimiter,\r\n    validators.validateInput(TaskID),\r\n    TaskController.getTaskById,\r\n  ]);\r\n\r\nexport default router;\r\n","import express, { Router } from \"express\";\n\nimport mainLimiter from \"../../middleware/limiters\";\nimport AuthChecker from \"../../middleware/auth\";\nimport { Role } from \"../../types\";\nimport UserController from \"../../controllers/user\";\n\nconst router: Router = express.Router();\n\nrouter\n  .route(\"/\")\n  .get([\n    mainLimiter,\n    AuthChecker.isAuthenticated,\n    AuthChecker.isAuthorized(Role.END_USER),\n    AuthChecker.isAuthorized(Role.ADMIN),\n    UserController.getUsers,\n  ]);\n\nexport default router;\n","import { faker } from \"@faker-js/faker\";\nimport { Role, User } from \"../models\";\nimport logger from \"../config/logger.config\";\nimport AuthService from \"../services/auth/tools\";\nimport { Role as ERole } from \"../types\";\n\nconst roleList = [ERole.ADMIN, ERole.END_USER, ERole.SUPER_ADMIN];\nconst authService = new AuthService();\nexport const seedRoles = async () => {\n  try {\n    const roles = await Role.find({});\n    if (roles.length === 0) {\n      const roleArr = roleList.map((role: ERole) => {\n        const temp = new Role();\n        temp.name = role.toString();\n        temp.createdBy = \"GodzillaJim\";\n        return temp;\n      });\n      await Role.bulkSave(roleArr);\n    }\n  } catch (error) {\n    logger.error(error);\n  }\n};\n\nexport const seedAdmin = async () => {\n  try {\n    const superAdmin = await User.findOne({\n      email: \"superadmin@collaborate.com\",\n    });\n    if (!superAdmin) {\n      const user = new User();\n      const { salt, hash } = authService.encryptPassword(\"password123\");\n      user.email = \"superadmin@collaborate.com\";\n      user.firstName = faker.name.firstName();\n      user.lastName = faker.name.lastName();\n      user.password = hash;\n      user.salt = salt;\n      user.avatar = faker.image.avatar();\n      user.disabled = false;\n      user.verified = true;\n      user.emailVerifiedAt = new Date();\n      user.emailVerificationCode = faker.word.noun(6);\n      user.roles = await Role.find({});\n      await user.save();\n    }\n  } catch (e) {\n    logger.error(e);\n  }\n};\n","import cors from \"cors\";\nimport dotenv from \"dotenv\";\nimport express from \"express\";\nimport helmet from \"helmet\";\nimport morgan from \"morgan\";\nimport { morganConfig } from \"./config/config\";\nimport router from \"./routes\";\nimport socketServer from \"./services/socket/server\";\n\ndotenv.config();\n\nconst app = express();\n\nconst middleware = [\n  morgan(morganConfig),\n  helmet(),\n  cors(),\n  express.json(),\n  express.urlencoded({ extended: false }),\n];\n\napp.use(middleware);\n\napp.use(\"/api/v1\", router);\n\nconst server = socketServer(app);\nexport default server;\n","import User from \"../../models/users\";\n\nexport default class UserService {\n  public static async getAllUsers(): Promise<typeof User[]> {\n    return User.find();\n  }\n}\n","import createHttpError from \"http-errors\";\nimport NewAccount from \"../../../types/dto/registration\";\nimport { User } from \"../../../models\";\nimport AuthService from \"../tools\";\nimport Login from \"../../../types/dto/login\";\n\nexport default class Account {\n  authService: AuthService;\n\n  constructor() {\n    this.authService = new AuthService();\n  }\n\n  public async registerNewAccount(account: NewAccount) {\n    const user = await User.findOne({ email: account.email });\n    if (user) {\n      throw new createHttpError.BadRequest(\"This email is already registered.\");\n    }\n    const { salt, hash } = this.authService.encryptPassword(account.password);\n    const newUser = new User();\n    newUser.email = account.email;\n    newUser.firstName = account.firstName;\n    newUser.lastName = account.lastName;\n    newUser.password = hash;\n    newUser.salt = salt;\n    newUser.roles = await this.authService.getDefaultRoles();\n    if (account.avatar) {\n      newUser.avatar = account.avatar;\n    }\n    await newUser.save();\n    return { success: true, message: \"Account created successfully!\" };\n  }\n\n  public async loginUser({ email, password }: Login) {\n    const user: any = await User.findOne({ email });\n    if (!user) {\n      const error = new createHttpError.BadRequest(\n        \"This person does not exist!\"\n      );\n      error.status = 400;\n      throw error;\n    }\n    const isPassValid = this.authService.validatePassword(\n      password,\n      user.password,\n      user.salt\n    );\n    if (!isPassValid) {\n      const error = new createHttpError.BadRequest(\n        \"Wrong username or password!\"\n      );\n      error.status = 400;\n      throw error;\n    }\n\n    const token = this.authService.generateJwtToken({\n      email,\n      firstName: user.firstName,\n      roles: user.roles.map(({ name }: { name: string }) => name),\n    });\n    return { ...token, firstName: user.firstName, avatar: user.avatar };\n  }\n}\n","import crypto from \"crypto\";\nimport { isEqual } from \"lodash\";\nimport jwt from \"jsonwebtoken\";\nimport config from \"../../../config\";\nimport Role from \"../../../models/roles\";\n\nexport default class AuthService {\n  private readonly salt: string;\n\n  secret: string;\n\n  expiration: string | number;\n\n  private readonly defaultRole: string[];\n\n  constructor() {\n    this.salt = crypto.randomBytes(16).toString(\"hex\");\n    this.defaultRole = [\"endUser\"];\n    this.secret = config.jwt.secret;\n    this.expiration = config.jwt.expiration;\n  }\n\n  public static verifyToken(token: string) {\n    try {\n      return jwt.verify(token, config.jwt.secret, { complete: true });\n    } catch (e) {\n      console.log(e);\n      return null;\n    }\n  }\n\n  public async getDefaultRoles() {\n    return await Role.find({ name: this.defaultRole });\n  }\n\n  public encryptPassword(password: string): {\n    salt: string;\n    hash: string;\n  } {\n    const hash = crypto\n      .pbkdf2Sync(password, this.salt, 1000, 64, \"sha1\")\n      .toString(\"hex\");\n    return { salt: this.salt, hash };\n  }\n\n  public validatePassword(\n    password: string,\n    hash: string,\n    salt: string\n  ): boolean {\n    const candidateHash = crypto\n      .pbkdf2Sync(password, salt, 1000, 64, \"sha1\")\n      .toString(\"hex\");\n    return isEqual(candidateHash, hash);\n  }\n\n  public generateJwtToken({\n    email,\n    firstName,\n    roles,\n  }: {\n    email: string;\n    firstName: string;\n    roles: any;\n  }): {\n    token: string;\n    expiresIn: string | number;\n  } {\n    const token = jwt.sign({ email, firstName, roles }, this.secret, {\n      expiresIn: this.expiration,\n    });\n    return { token, expiresIn: this.expiration };\n  }\n}\n","import { IContactForm } from \"../../types\";\nimport logger from \"../../config/logger.config\";\nimport KafkaProducerService from \"../kafka\";\n\nexport default class ContactFormService {\n  TOPIC = \"collaborate_contact_form_messages\";\n\n  public async submitContactForm(form: IContactForm) {\n    try {\n      const producerService = new KafkaProducerService();\n      await producerService.produceMessage(this.TOPIC, form);\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n}\n","import { Message, Producer } from \"kafkajs\";\nimport { boundClass } from \"autobind-decorator\";\nimport { IContactForm } from \"../../types\";\nimport logger from \"../../config/logger.config\";\nimport { producer } from \"../../tools/kafka\";\n\n@boundClass\nexport default class KafkaProducerService {\n  producer: Producer;\n\n  constructor() {\n    this.producer = producer;\n  }\n\n  public async produceMessage(topic: string, message: any) {\n    try {\n      await this.producer.connect();\n      await this.producer.send({\n        topic,\n        messages: [{ value: JSON.stringify(message) }],\n      });\n    } catch (error) {\n      logger.error(error);\n    }\n  }\n}\n","import { Application } from \"express\";\nimport { Server, Socket } from \"socket.io\";\nimport { createServer } from \"http\";\nimport logger from \"../../../config/logger.config\";\nimport userHandlers from \"./services/User\";\nimport Task from \"../../../models/task\";\n\nconst SocketIO = require(\"socket.io\");\n/**\n * Create socket server from Express app\n * @param {Application} app The express application\n * @returns {Application | Server} The final app server to start listening\n */\nconst { removeUser, usersInRoom, addUser } = userHandlers;\ninterface IUser {\n  username: string;\n  socketID: string;\n}\n\ninterface IRoom {\n  users: IUser[];\n  data: any;\n}\n\nconst roomList: Record<any, IRoom> = {};\n\nconst str = `function(){\n  //Write code here\n}`;\n\nconst socketServer = (app: Application) => {\n  try {\n    const server = createServer(app);\n    const io = SocketIO(server);\n\n    io.on(\"connection\", (socket: Socket) => {\n      /*------------------Chat Messages-------------*/\n\n      socket.on(\"joinRoom\", ({ room }) => {\n        socket.join(room);\n      });\n\n      socket.on(\"chatMessage\", ({ message, sender, avatar, date, room }) => {\n        io.to(room).emit(\"newMessage\", { message, sender, avatar, date, room });\n      });\n\n      /*--------------------Chat Messages end----------*/\n\n      socket.on(\"join\", async ({ name, room }: any) => {\n        const task = await Task.findById(room);\n\n        if (!roomList[room]) {\n          roomList[room] = { users: [], data: task.code };\n        }\n\n        const user = addUser({ id: socket.id, name, room });\n\n        socket.join(room);\n        socket.broadcast.to(room).emit(\"notification\", {\n          text: `${user.name} has joined!`,\n          type: \"connect\",\n        });\n\n        io.to(room).emit(\"roomData\", {\n          room,\n          users: usersInRoom(user.room),\n          data: roomList[room].data,\n        });\n      });\n      socket.on(\"sendText\", ({ data, room, name }) => {\n        if (roomList[room]) {\n          roomList[room].data = data;\n        } else {\n          roomList[room] = { users: [], data };\n        }\n        Task.updateOne({ id: room }, { code: data });\n        socket.broadcast.to(room).emit(\"text\", { data, name });\n      });\n\n      socket.on(\"sendModeValue\", ({ mode, room }) => {\n        socket.broadcast.to(room).emit(\"changeMode\", mode);\n      });\n\n      socket.on(\"sendThemeValue\", ({ theme, room }) => {\n        socket.broadcast.to(room).emit(\"changeTheme\", theme);\n      });\n\n      socket.on(\"disconnect\", () => {\n        const user = removeUser(socket.id);\n        if (user) {\n          if (usersInRoom(user.room).length <= 1) {\n            Task.updateOne({ id: user.room });\n          }\n\n          io.to(user.room).emit(\"notification\", {\n            text: `${user.name} has left`,\n            type: \"disconnect\",\n          });\n        }\n      });\n    });\n    return server;\n  } catch (e) {\n    logger.error(e);\n    console.log(e);\n    return app;\n  }\n};\nexport default socketServer;\n","export interface IUser {\n  id: string;\n  name: string;\n  room: string;\n}\n\nconst users: IUser[] = [];\n\nconst addUser = ({\n  id,\n  name,\n  room,\n}: {\n  id: string;\n  name: string;\n  room: string;\n}): IUser => {\n  let user = users.find(({ id: i }: IUser) => i === id);\n  if (!findUser) {\n    user = { id, name, room };\n    users.push(user);\n  }\n  return { ...user };\n};\n\nconst removeUser = (id: string) => {\n  const index = users.findIndex((user) => user.id === id);\n  if (index !== -1) {\n    return users.splice(index, 1)[0];\n  }\n};\n\nconst findUser = (id: string) =>\n  users.find(({ id: userId }: IUser) => userId === id);\n\nconst usersInRoom = (room: string) =>\n  users.filter((user) => user.room === room);\n\nexport default { addUser, removeUser, findUser, usersInRoom };\n","/* eslint-disable no-return-await */\nimport TaskDTO from \"../../types/dto/task/create\";\nimport Task from \"../../models/task\";\nimport TaskID from \"../../types/dto/task/findOne\";\n\nexport default class TaskService {\n  public static async createTask(task: TaskDTO, ownerEmail: string) {\n    const newTask = new Task();\n    newTask.name = task.name;\n    newTask.owner = ownerEmail;\n    return await newTask.save();\n  }\n\n  public static async getTaskById(taskId: TaskID) {\n    return await Task.findById(taskId.id);\n  }\n}\n","import { Kafka } from \"kafkajs\";\nimport dotenv from \"dotenv\";\nimport config from \"../../config\";\n\ndotenv.config();\nconst { clientId, bootstrapServerHost } = config.kafka;\nconst kafka = new Kafka({\n  clientId,\n  brokers: [bootstrapServerHost],\n});\n\nexport const producer = kafka.producer();\nexport const consumer = kafka.consumer({ groupId: \"collabor@te\" });\nexport default kafka;\n","import { isEmpty } from \"lodash\";\nimport { boundClass } from \"autobind-decorator\";\nimport { NextFunction, Response, Request } from \"express\";\nimport {\n  ClassConstructor,\n  plainToClass,\n  plainToInstance\n} from \"class-transformer\";\nimport { validate } from \"class-validator\";\nimport { IContactForm } from \"../../types\";\nimport logger from \"../../config/logger.config\";\nimport ContactForm from \"../../types/dto/contact/ContactForm\";\n\n// Arr@w05GodbyChinu@Achebe\n\n@boundClass\nclass Validators {\n  public static validateForm(form: IContactForm) {\n    const definedFields =\n      form.name && form.email && form.message && form.subject;\n    const nonEmptyFields =\n      isEmpty(form) ||\n      isEmpty(form.name) ||\n      isEmpty(form.message) ||\n      isEmpty(form.subject) ||\n      isEmpty(form.email);\n    if (Boolean(definedFields) && !nonEmptyFields) {\n      return true;\n    }\n    return false;\n  }\n\n  public static validateInput(dtoClass: ClassConstructor<any>) {\n    return (req: Request, res: Response, next: NextFunction) => {\n      const output = plainToInstance(dtoClass, req.body);\n      validate(output, req.body, {\n        skipMissingProperties: true,\n        stopAtFirstError: true,\n      }).then((errors) => {\n        if (errors.length > 0) {\n          logger.error(errors);\n          const errorTexts: { [type: string]: string }[] = [];\n          errors.forEach((err) => {\n            errorTexts.push(err.constraints);\n          });\n          return res.status(400).json({ error: true, data: errorTexts });\n        }\n        req.body = output;\n        return next();\n      });\n    };\n  }\n}\nexport default Validators;\n","import { IsEmail, IsNotEmpty } from \"class-validator\";\n\nexport default class ContactForm {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNotEmpty()\n  name: string;\n\n  @IsNotEmpty()\n  subject: string;\n\n  @IsNotEmpty()\n  message: string;\n\n  constructor(email: string, name: string, subject: string, message: string) {\n    this.email = email;\n    this.name = name;\n    this.subject = subject;\n    this.message = message;\n  }\n}\n","import { IsEmail, IsNotEmpty } from \"class-validator\";\n\nexport default class Login {\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n}\n","import { IsEmail, IsNotEmpty } from \"class-validator\";\n\nexport default class NewAccount {\n  @IsNotEmpty()\n  firstName: string;\n\n  @IsNotEmpty()\n  lastName: string;\n\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n\n  avatar?: string;\n}\n","import { IsNotEmpty } from \"class-validator\";\n\nexport default class TaskDTO {\n  @IsNotEmpty()\n  name: string;\n}\n","import { IsNotEmpty } from \"class-validator\";\n\nexport default class TaskID {\n  @IsNotEmpty()\n  id: string;\n}\n","/* eslint-disable no-unused-vars */\nexport enum Role {\n  END_USER = 0,\n  ADMIN = 1,\n  SUPER_ADMIN = 2,\n}\nexport interface IContactForm {\n  email: string;\n  name: string;\n  subject: string;\n  message: string;\n}\n","module.exports = require(\"@faker-js/faker\");","module.exports = require(\"autobind-decorator\");","module.exports = require(\"class-transformer\");","module.exports = require(\"class-validator\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"express-rate-limit\");","module.exports = require(\"helmet\");","module.exports = require(\"http-errors\");","module.exports = require(\"jsonwebtoken\");","module.exports = require(\"kafkajs\");","module.exports = require(\"lodash\");","module.exports = require(\"mongoose\");","module.exports = require(\"morgan\");","module.exports = require(\"socket.io\");","module.exports = require(\"winston\");","module.exports = require(\"crypto\");","module.exports = require(\"http\");","module.exports = require(\"http2\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}